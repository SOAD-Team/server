// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Persistence;

namespace Server.Migrations
{
    [DbContext(typeof(MoviesDB))]
    partial class MoviesDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Models.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("IdGenre")
                        .HasName("PK__Genre__E7B67398A33A5261");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Server.Models.Language", b =>
                {
                    b.Property<int>("IdLanguage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("IdLanguage")
                        .HasName("PK__Language__1656D917D9E6BCEC");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.Property<int>("IdMovie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IdMovie")
                        .HasName("PK__Movie__DC0DD0ED8789E0BB");

                    b.HasIndex("IdUser");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("Server.Models.MovieData", b =>
                {
                    b.Property<int>("IdMovieData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("IdMovie")
                        .HasColumnType("int");

                    b.Property<int>("IdStyle")
                        .HasColumnType("int");

                    b.Property<string>("ImageMongoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte?>("Imdb")
                        .HasColumnName("IMDB")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MetaScore")
                        .HasColumnType("tinyint");

                    b.Property<bool>("PlatFav")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("IdMovieData")
                        .HasName("PK__MovieDat__F8C19D024604FF2B");

                    b.HasIndex("IdMovie");

                    b.HasIndex("IdStyle");

                    b.ToTable("MovieData");
                });

            modelBuilder.Entity("Server.Models.MovieDataGenre", b =>
                {
                    b.Property<int>("IdMovieDataGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<int>("IdMovieData")
                        .HasColumnType("int");

                    b.HasKey("IdMovieDataGenre")
                        .HasName("PK__tmp_ms_x__A19A4473AD79554F");

                    b.HasIndex("IdGenre");

                    b.HasIndex("IdMovieData");

                    b.ToTable("MovieDataGenre");
                });

            modelBuilder.Entity("Server.Models.MovieDataLanguage", b =>
                {
                    b.Property<int>("IdMovieDataLanguage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdLanguage")
                        .HasColumnType("int");

                    b.Property<int>("IdMovieData")
                        .HasColumnType("int");

                    b.HasKey("IdMovieDataLanguage")
                        .HasName("PK__tmp_ms_x__6386009C43EC3D5E");

                    b.HasIndex("IdLanguage");

                    b.HasIndex("IdMovieData");

                    b.ToTable("MovieDataLanguage");
                });

            modelBuilder.Entity("Server.Models.Review", b =>
                {
                    b.Property<int>("IdReview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("IdMovie")
                        .HasColumnType("int");

                    b.Property<byte>("Score")
                        .HasColumnType("tinyint");

                    b.HasKey("IdReview")
                        .HasName("PK__Review__BB56047DA5C44F2B");

                    b.HasIndex("IdMovie");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Server.Models.Style", b =>
                {
                    b.Property<int>("IdStyle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("IdStyle")
                        .HasName("PK__Style__3B87D25469B07980");

                    b.ToTable("Style");
                });

            modelBuilder.Entity("Server.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(89)")
                        .HasMaxLength(89)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdUser")
                        .HasName("PK__User__B7C92638700CD593");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Server.Models.Movie", b =>
                {
                    b.HasOne("Server.Models.User", "IdUserNavigation")
                        .WithMany("Movie")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Movie__IdUser__603D47BB")
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Models.MovieData", b =>
                {
                    b.HasOne("Server.Models.Movie", "IdMovieNavigation")
                        .WithMany("MovieData")
                        .HasForeignKey("IdMovie")
                        .HasConstraintName("FK__MovieData__IdMov__65F62111")
                        .IsRequired();

                    b.HasOne("Server.Models.Style", "IdStyleNavigation")
                        .WithMany("MovieData")
                        .HasForeignKey("IdStyle")
                        .HasConstraintName("FK__MovieData__IdSty__66EA454A")
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Models.MovieDataGenre", b =>
                {
                    b.HasOne("Server.Models.Genre", "IdGenreNavigation")
                        .WithMany("MovieDataGenre")
                        .HasForeignKey("IdGenre")
                        .HasConstraintName("FK__MovieData__IdGen__7BE56230")
                        .IsRequired();

                    b.HasOne("Server.Models.MovieData", "IdMovieDataNavigation")
                        .WithMany("MovieDataGenre")
                        .HasForeignKey("IdMovieData")
                        .HasConstraintName("FK__MovieData__IdMov__7AF13DF7")
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Models.MovieDataLanguage", b =>
                {
                    b.HasOne("Server.Models.Language", "IdLanguageNavigation")
                        .WithMany("MovieDataLanguage")
                        .HasForeignKey("IdLanguage")
                        .HasConstraintName("FK__MovieData__IdLan__7FB5F314")
                        .IsRequired();

                    b.HasOne("Server.Models.MovieData", "IdMovieDataNavigation")
                        .WithMany("MovieDataLanguage")
                        .HasForeignKey("IdMovieData")
                        .HasConstraintName("FK__MovieData__IdMov__7EC1CEDB")
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Models.Review", b =>
                {
                    b.HasOne("Server.Models.Movie", "IdMovieNavigation")
                        .WithMany("Review")
                        .HasForeignKey("IdMovie")
                        .HasConstraintName("FK__Review__IdMovie__6319B466")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
